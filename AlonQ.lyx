#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{amsmath}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\headheight 1in
\headsep 1in
\footskip 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
1 2D- Fourier Transform
\end_layout

\begin_layout Subsection*
1.1 Writing your own functions
\end_layout

\begin_layout Enumerate
In this section, we wrote our own 2D-FFT and 2D-IFFT functions.
 We used the given equations for FFT and iFFT:
\begin_inset Formula 
\[
F(u+1,v+1)=\sum_{m=0}^{M-1}\sum_{n=0}^{N-1}I(m+1,n+1)\cdot e^{-2\pi i(\frac{um}{M}+\frac{un}{N})}
\]

\end_inset


\begin_inset Formula 
\[
I(u+1,v+1)=\frac{1}{MN}\sum_{u=0}^{M-1}\sum_{V=0}^{N-1}F(u+1,v+1)\cdot e^{2\pi i(\frac{um}{M}+\frac{un}{N})}
\]

\end_inset

 Here are the 
\family typewriter
dip_fft()
\family default
 function: 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/dip_fft2 - Copy.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\family typewriter
dip_fft2()
\end_layout

\end_inset


\end_layout

\end_inset

And here is the 
\family typewriter
dip_ifft2()
\family default
 function: 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/dip_ifft2 - Copy.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\family typewriter
dip_ifft2()
\end_layout

\end_inset


\end_layout

\end_inset

 For those functions we also used auxiliary functions 
\family typewriter
dip_fft()
\family default
 and 
\family typewriter
dip_ifft() 
\family default
which calculates the 1D-FFT and 1D-iFFT respectively:
\family typewriter

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/dip_fft and dip_ifft() - Copy.png

\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset Caption Standard

\begin_layout Plain Layout

\family typewriter
dip_fft()
\family default
 and 
\family typewriter
dip_ifft()
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\family default
1.
 Explanation: The dip_fft2() function: We took the matrix and made sure
 all the input is in complex form.
 If not, convert it so.
 Then, we made sure that the dimensions of the matrix are powers of two.
 If not, pad it with zeroes to fit those sizes.
 Then, we will notice that if we rearrange the given formula for 2D-FFT,
 we can view the transform as firstly a 1D-DFT to all the columns, and then
 a 1D-DFT to all the rows of those transformed columns.
 We derive it from this form: 
\begin_inset Formula 
\[
F(u+1,v+1)=\sum_{m=0}^{M-1}\overset{columns\,FFT\,transform}{\left(\sum_{n=0}^{N-1}I(m+1,n+1)\cdot e^{-2\pi i\frac{un}{N}}\right)}e^{-2\pi i\frac{um}{M}}
\]

\end_inset

In order to do so, we use the 
\family typewriter
dip_fft()
\family default
 function.
 This function uses the radix-2 FFT algorithm.
 Let 
\series bold

\begin_inset Formula $\boldsymbol{X}^{\text{d}}$
\end_inset


\series default
 the 
\begin_inset Formula $N$
\end_inset

 size vector that represents the DFT of vector 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

.
 We will denote 
\begin_inset Formula $\boldsymbol{X}_{e}$
\end_inset

 as the even index entries and 
\begin_inset Formula $\boldsymbol{X}_{\text{o}}$
\end_inset

 as the odd index entries.
 We will note that each of these vectors are of 
\begin_inset Formula $N/2$
\end_inset

 length.
 We will also denote 
\begin_inset Formula $\boldsymbol{W}_{N}=(1,\,e^{-\frac{2\pi i}{N}},\,e^{-2\cdot\frac{2\pi i}{N}},\:\cdots,\:e^{-(N/2-1)\cdot\frac{2\pi i}{N}})$
\end_inset

.
 The radix-2 algorithm says that:
\begin_inset Formula 
\[
\boldsymbol{X}^{d}=\begin{pmatrix}\boldsymbol{X}_{e}+\boldsymbol{W}_{N}\boldsymbol{X}_{o}\\
\boldsymbol{X}_{e}-\boldsymbol{W}_{N}\boldsymbol{X}_{o}
\end{pmatrix}
\]

\end_inset

We can also see that we can repeat this process recursively for each 
\begin_inset Formula $\boldsymbol{X}_{e}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{X}_{o}$
\end_inset

 until 
\begin_inset Formula $N=1$
\end_inset

.
 The 
\family typewriter
dip_ifft2()
\family default
 function works very similarly except few variations:
\end_layout

\begin_deeper
\begin_layout Itemize
There is no need to pad with zeros.
 (i assumes the FFT sizes are already padded to the power of 2)
\end_layout

\begin_layout Itemize
\begin_inset Formula $\boldsymbol{W}_{N}=(1,\,e^{\frac{2\pi i}{N}},\,e^{2\cdot\frac{2\pi i}{N}},\:\cdots,\:e^{(N/2-1)\cdot\frac{2\pi i}{N}})$
\end_inset


\end_layout

\begin_layout Itemize
At the end we normalized the result by 
\begin_inset Formula $\frac{1}{MN}$
\end_inset

 
\end_layout

\begin_layout Standard
Note: the dip_ifft() will return an image that is padded with zeros.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Here is the dip_fftshift() function we wrote: 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/shifted_FFT - Copy.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\family typewriter
dip_fftshift()
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Explanation: We set the center to the the middle of the matrix and shifted
 the quadrants accordingly.
\end_layout

\begin_layout Enumerate
We used a function from previous exercises to read, convert to grayscale
 and normalize the image: 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/imread_double_norm().png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\family typewriter
imread_double_norm()
\end_layout

\end_inset


\end_layout

\end_inset

Here is the image: 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/gray_beatles.jpg
	width 5.5in

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Grayscale Beatles Image 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
In this section, we calculated the 2D-FFT of the image, shifted the center,
 calculated the amplitude and the phase of the matrix, converted to grayscale
 and displayed the results using 
\family typewriter
Imagesc() 
\family default
with colorbars.
 Here they are: 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
Image
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/amp and phase.jpg
	width 5.5in

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Amplitude and Phase of the 2D-FFT 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
In this section, we used the dip_ifft2() function on the previous transformed
 image.
 Here is the image:
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/dip_ifft2 beatles.jpg
	width 5.5in

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
dip_fft2() image
\end_layout

\end_inset


\end_layout

\end_inset

As we can see there is a difference from the original image.
 There are added black pixels.
 This is due to the zero padding we did in the dip_fft2() function in order
 to speed up the calculations.
 We conducted a test to measure the differences of the original image pixels
 and the corresponding dip_ifft2() image pixels.
 We calculated the maximum value of absolute difference, and we obtained
 that is 8.326672684688674e-16.
 A minor change due to computational errors.
 We will conclude from the findings that the inverse transformation was
 successful.
 
\end_layout

\end_body
\end_document
